const CreepBase = require('./CreepBase');

class Attacker extends CreepBase {
    handleIdleState() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
        const enemy = this.findClosestTarget(FIND_HOSTILE_CREEPS);
        if (enemy) {
            console.log(`Attacker ${this.creep.name}: Found enemy ${enemy.id} at ${enemy.pos}`);
            this.memory.target = enemy.id;
            this.setState(CreepBase.STATE_MOVING); // –°–Ω–∞—á–∞–ª–∞ –∏–¥–µ–º –∫ —Ü–µ–ª–∏
            this.handleMovingState(); // –í—ã–∑—ã–≤–∞–µ–º —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å —Ç–∏–∫
        } else {
             // –ù–µ—Ç –≤—Ä–∞–≥–æ–≤, –º–æ–∂–Ω–æ –ø–∞—Ç—Ä—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —Å—Ç–æ—è—Ç—å –Ω–∞ –º–µ—Å—Ç–µ
             this.creep.say?.('üõ°Ô∏è No targets');
        }
    }

    handleWorkingState() {
        const targetId = this.memory.target;
        if (!targetId) {
            this.setState(CreepBase.STATE_IDLE);
            return;
        }
        const target = this.gameState.game.getObjectById(targetId);
        if (!target || target.hits === 0) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–µ–ª—å –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∂–∏–≤–∞
             console.log(`Attacker ${this.creep.name}: Target ${targetId} lost or destroyed. Going idle.`);
            delete this.memory.target;
            this.setState(CreepBase.STATE_IDLE);
            return;
        }

        // –ê—Ç–∞–∫—É–µ–º, –µ—Å–ª–∏ –≤ —Ä–∞–¥–∏—É—Å–µ –¥–µ–π—Å—Ç–≤–∏—è
        const attackResult = this.creep.attack(target);
        if (attackResult === ERR_NOT_IN_RANGE) {
             // –ï—Å–ª–∏ –Ω–µ –¥–æ—Å—Ç–∞–µ–º, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ
             this.setState(CreepBase.STATE_MOVING);
             this.handleMovingState(); // –í—ã–∑—ã–≤–∞–µ–º —Å—Ä–∞–∑—É
        } else if (attackResult === OK) {
            this.creep.say?.('‚öîÔ∏è Attack!');
            // –û—Å—Ç–∞–µ–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ WORKING, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∞—Ç–∞–∫–æ–≤–∞—Ç—å –Ω–∞ —Å–ª–µ–¥. —Ç–∏–∫–µ
        } else {
             console.log(`Attacker ${this.creep.name}: Attack failed with code ${attackResult}`);
             // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
             this.setState(CreepBase.STATE_IDLE); // –í —Å–ª—É—á–∞–µ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π –æ—à–∏–±–∫–∏ - –≤ idle
        }
    }

    // handleMovingState –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∑ CreepBase
}

module.exports = Attacker;   
